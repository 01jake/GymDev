@* @page "/CrudCliente"
@using GymDev.Shared.Modelos;
@using GymDev.Client.Servicios;
@inject ClienteServicio ClienteServicio
@inject NavigationManager NavigationManager
@attribute [StreamRendering(true)]
@rendermode @(new InteractiveWebAssemblyRenderMode(false))

<h3>CrudCliente</h3>
@if (Cliente == null)
{
	<p><em>Loading...</em></p>
}
else
{
	
	<div class="grid-container">
		<DxGrid Data="@Cliente" ShowAllRows="true" ColumnResizeMode="GridColumnResizeMode.NextColumn" TextWrapEnabled="false">
			<Columns>
				<DxGridDataColumn FieldName="Nombre" />
				<DxGridDataColumn FieldName="Apellidos" />
				<DxGridDataColumn FieldName="Email" />
				<DxGridDataColumn FieldName="Endereco" Width="10%" />
				<DxGridDataColumn FieldName="Fecha_Ncimiento" />
				<DxGridDataColumn FieldName="Fecha_Apertura" />
				<DxGridDataColumn FieldName="Fecha_Vencimiento" />
				<DxGridDataColumn FieldName="Sexo" />
				<DxGridDataColumn FieldName="Telefone"  />
			</Columns>
		</DxGrid>
	</div>
}
@code {

		    object Cliente { get; set; }

	protected override async Task OnInitializedAsync()
	{
		var suppliers = await ClienteServicio.ObtenerCliente();
		Cliente = suppliers.Select(s =>
		{
			return new
			{
				Nombre = s.Nombre,
				Apellidos = s.Apellido,
				Email = s.Email,
				Endereco = s.Endereco,
				Fecha_Ncimiento = s.Fecha_Ncimiento,
				Fecha_Apertura = s.Fecha_Apertura,
				Fecha_Vencimiento = s.Fecha_Vencimiento,
				ContactName = s.Sexo,
				Telefone = s.Telefone
			};
		});
	}
	// protected override async Task OnInitializedAsync()
	// {
	// 	Clientes = await ClienteServicio.ObtenerCliente();
	// }
	private void AbrirAgregarClietne()
	{
		NavigationManager.NavigateTo($"/AddCliente");
	}
	private async Task EliminarPersonaje(int id)
	{
		await ClienteServicio.EliminarCliente(id);
		Cliente = await ClienteServicio.ObtenerCliente();

	}



}
 *@